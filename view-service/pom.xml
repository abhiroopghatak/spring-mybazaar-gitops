	<?xml version="1.0" encoding="UTF-8"?>
	<project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
		<modelVersion>4.0.0</modelVersion>
		<parent>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-parent</artifactId>
			<version>2.3.3.RELEASE</version>
			<relativePath /> <!-- lookup parent from repository -->
		</parent>
		<groupId>com.abhiroop.mybazaar</groupId>
		<artifactId>view-service</artifactId>
		<version>${env.CI_COMMIT_SHA}-SNAPSHOT</version>
		<name>view-service</name>
		<description>view layer svc project for mybazaar</description>
	
		<properties>
			<java.version>1.8</java.version>
			<spring-cloud.version>Hoxton.SR7</spring-cloud.version>
		</properties>
	
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
			</dependency>
	
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-mail</artifactId>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>0.9.1</version>
			</dependency>
	
	
	
			<!-- https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api -->
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>javax.persistence-api</artifactId>
			</dependency>
			<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
			</dependency>
	
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
			</dependency>
	
	
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<scope>runtime</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.restdocs</groupId>
				<artifactId>spring-restdocs-mockmvc</artifactId>
				<scope>test</scope>
			</dependency>
	
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
			</dependency>
	
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-openfeign</artifactId>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-hystrix -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
				<version>2.2.5.RELEASE</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-hystrix-dashboard -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
				<version>1.4.7.RELEASE</version>
			</dependency>
		</dependencies>
	
		<dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-dependencies</artifactId>
					<version>${spring-cloud.version}</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
			</dependencies>
		</dependencyManagement>
	
		<build>
			<plugins>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>1.5.8</version>
					<executions>
						<execution>
							<id>generate-docs</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>html</backend>
								<doctype>book</doctype>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.springframework.restdocs</groupId>
							<artifactId>spring-restdocs-asciidoctor</artifactId>
							<version>${spring-restdocs.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- JMETER PLUGIN -->
				<plugin>
					<groupId>com.lazerycode.jmeter</groupId>
					<artifactId>jmeter-maven-plugin</artifactId>
					<version>2.0.3</version>
					<executions>
						<execution>
							<id>jmeter-tests</id>
							<phase>verify</phase>
							<goals>
								<goal>jmeter</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<testFilesDirectory>${project.basedir}/src/main/resources/jmeter</testFilesDirectory>
						<resultsDirectory>${project.basedir}/src/main/resources/jmeter</resultsDirectory>
					</configuration>
				</plugin>
				<!-- JMETER PLUGIN -->
	
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.5.0</version>
                <configuration>
                    <to>
                        <image>registry.hub.docker.com/abhiroopghatak/jib</image>
						
                    </to>
				<allowInsecureRegistries>true</allowInsecureRegistries>
				<sendCredentialsOverHttp>true</sendCredentialsOverHttp>

                </configuration>
            </plugin>
			</plugins>
		</build>
		<distributionManagement>
			<repository>
				<id>snapshots</id>
				<name>snapshots</name>
				<url>${env.NEXUS_REPO_URL}/maven-snapshots/</url>
			</repository>
		</distributionManagement>
	</project>
